{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Teamly.py Teamly.py is an async/await -based bot library (API wrapper) developed for teamly.one . Its goal is to provide a modern , fast , and feature-rich integration experience. Highlights Asynchronous architecture ( async/await ) for high performance Open-source repository: https://github.com/MrFatihLD/teamly.py Note Teamly.py is currently in alpha stage . Expect breaking changes, incomplete features, and active development. It is not recommended for production use at this time. Getting Started Is this your first time using the library? This is the place to get started! First stepts: Introduction | Quickstart Guick Start A quick start for the teamly.py API wrapper: Guick Start","title":"Home"},{"location":"#teamlypy","text":"Teamly.py is an async/await -based bot library (API wrapper) developed for teamly.one . Its goal is to provide a modern , fast , and feature-rich integration experience.","title":"Teamly.py"},{"location":"#highlights","text":"Asynchronous architecture ( async/await ) for high performance Open-source repository: https://github.com/MrFatihLD/teamly.py Note Teamly.py is currently in alpha stage . Expect breaking changes, incomplete features, and active development. It is not recommended for production use at this time.","title":"Highlights"},{"location":"#getting-started","text":"Is this your first time using the library? This is the place to get started! First stepts: Introduction | Quickstart","title":"Getting Started"},{"location":"#guick-start","text":"A quick start for the teamly.py API wrapper: Guick Start","title":"Guick Start"},{"location":"about/license/","text":"","title":"License"},{"location":"about/release-notes/","text":"","title":"Release Notes"},{"location":"getting-started/introduction/","text":"Introduction This is the documentation for teamly.py, a library for Python to aid in creating applications that communicates with Teamly API. Prerequisites teamly.py works with Python 3.8 or higher. Support for earlier versions of Python is not provided. Lower than Python 3.8 is not supported. Installing You can get the library directly from PyPI: pip install teamly.py If your pre-installed Python version requires pip3 instead of pip : pip3 install teamly-py if you are using Windows, then the following should be used instead: pip install teamly.py Virtual Enviroments Go to your project's working directory: cd your-bot-source python -m venv bot-env Activate the virtual enviroment: source bot-env/bin/activate On Windows you activate it with: bot-env\\Scripts\\activate.bat Use pip like usual: pip install teamly.py Congratulations. You now have a virtual environment all set up. Basic Concepts teamly.py revolves around the concept of events. An event is something you listen to and then respond to. For example, when a message happens, you will receive an event about it that you can respond to. A quick example to showcase how events work: import teamly client = client.Client() @client.event async def on_ready(): print(f\"Logged on as {client.user}!\") @client.event async def on_message(message): print(f\"Message from {message.author}: {message.content}\") client.run(\"my token\")","title":"Introduction"},{"location":"getting-started/introduction/#introduction","text":"This is the documentation for teamly.py, a library for Python to aid in creating applications that communicates with Teamly API.","title":"Introduction"},{"location":"getting-started/introduction/#prerequisites","text":"teamly.py works with Python 3.8 or higher. Support for earlier versions of Python is not provided. Lower than Python 3.8 is not supported.","title":"Prerequisites"},{"location":"getting-started/introduction/#installing","text":"You can get the library directly from PyPI: pip install teamly.py If your pre-installed Python version requires pip3 instead of pip : pip3 install teamly-py if you are using Windows, then the following should be used instead: pip install teamly.py","title":"Installing"},{"location":"getting-started/introduction/#virtual-enviroments","text":"Go to your project's working directory: cd your-bot-source python -m venv bot-env Activate the virtual enviroment: source bot-env/bin/activate On Windows you activate it with: bot-env\\Scripts\\activate.bat Use pip like usual: pip install teamly.py Congratulations. You now have a virtual environment all set up.","title":"Virtual Enviroments"},{"location":"getting-started/introduction/#basic-concepts","text":"teamly.py revolves around the concept of events. An event is something you listen to and then respond to. For example, when a message happens, you will receive an event about it that you can respond to. A quick example to showcase how events work: import teamly client = client.Client() @client.event async def on_ready(): print(f\"Logged on as {client.user}!\") @client.event async def on_message(message): print(f\"Message from {message.author}: {message.content}\") client.run(\"my token\")","title":"Basic Concepts"},{"location":"getting-started/quickstart/","text":"Quick Start before to quick start, If you have not created an teamly.one bot. Lets create it before the quick start guide: create your teamly bot First, we need to import the teamly package to access its functions and classes: import teamly Next, create a Client instance for your bot. This instance will be used to interact with the Teamly API and handle events. import teamly client = teamly.Client() Now we\u2019re ready to use the functions and events provided by our client instance. Let\u2019s start by defining the on_ready event \u2014 this event is triggered when the bot has successfully connected and is ready to operate. import teamly client = teamly.Client() @client.event async def on_ready(): print('The bot is Ready to go') After adding your event functions, you need to run the client to start the bot: import teamly client = teamly.Client() @client.event async def on_ready(): print('The bot is Ready to go') client.run('TOKEN') Replace TOKEN with your actual API token from Teamly.","title":"Quick Start"},{"location":"getting-started/quickstart/#quick-start","text":"before to quick start, If you have not created an teamly.one bot. Lets create it before the quick start guide: create your teamly bot First, we need to import the teamly package to access its functions and classes: import teamly Next, create a Client instance for your bot. This instance will be used to interact with the Teamly API and handle events. import teamly client = teamly.Client() Now we\u2019re ready to use the functions and events provided by our client instance. Let\u2019s start by defining the on_ready event \u2014 this event is triggered when the bot has successfully connected and is ready to operate. import teamly client = teamly.Client() @client.event async def on_ready(): print('The bot is Ready to go') After adding your event functions, you need to run the client to start the bot: import teamly client = teamly.Client() @client.event async def on_ready(): print('The bot is Ready to go') client.run('TOKEN') Replace TOKEN with your actual API token from Teamly.","title":"Quick Start"},{"location":"guide/create-your-teamly-bot/","text":"Create your teamly bot First, we need to create a bot for teamly.one . Go to the Teamly Developer site to create your bot. When you open the My Bots page, it will be empty if you haven\u2019t created any bots yet. Click the Create Bot button in the upper-right corner to start creating your bot. After entering your bot's name. You will redirect to your bot's panel: In this panel, you can configure all settings for your bot. You can: Change the profile picture Edit the bot\u2019s name Toggle between private and public mode Regenerate your API token if needed Adjust your bot\u2019s permissions Note The permissions you select here are not directly assigned to the bot. Instead, they will appear as pre-selected in the bot\u2019s invite link. The person inviting the bot to a team will have the final choice on which permissions to grant. Let\u2019s invite the bot to our team (in Teamly, a team is similar to a guild ).. Info: You need the \"Manage Team\" permission to add bots to a team. In this section, choose the team where you want to add the bot. After selecting the team, you can configure the bot\u2019s permissions for that team. Important The Bot Permissions section currently has a bug \u2014 some permissions, such as \"Kick Members\" , cannot be selected here. However, you can still adjust the bot\u2019s permissions later from the team\u2019s permission settings. After the invite you will see your bot in members list at the right corner:","title":"Create your teamly bot"},{"location":"guide/create-your-teamly-bot/#create-your-teamly-bot","text":"First, we need to create a bot for teamly.one . Go to the Teamly Developer site to create your bot. When you open the My Bots page, it will be empty if you haven\u2019t created any bots yet. Click the Create Bot button in the upper-right corner to start creating your bot. After entering your bot's name. You will redirect to your bot's panel: In this panel, you can configure all settings for your bot. You can: Change the profile picture Edit the bot\u2019s name Toggle between private and public mode Regenerate your API token if needed Adjust your bot\u2019s permissions Note The permissions you select here are not directly assigned to the bot. Instead, they will appear as pre-selected in the bot\u2019s invite link. The person inviting the bot to a team will have the final choice on which permissions to grant. Let\u2019s invite the bot to our team (in Teamly, a team is similar to a guild ).. Info: You need the \"Manage Team\" permission to add bots to a team. In this section, choose the team where you want to add the bot. After selecting the team, you can configure the bot\u2019s permissions for that team. Important The Bot Permissions section currently has a bug \u2014 some permissions, such as \"Kick Members\" , cannot be selected here. However, you can still adjust the bot\u2019s permissions later from the team\u2019s permission settings. After the invite you will see your bot in members list at the right corner:","title":"Create your teamly bot"}]}